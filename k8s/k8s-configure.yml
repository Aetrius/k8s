---
- name: k8s configuration
  hosts: "{{ target }}"
  become: true
 
  tasks:

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /etc/modules-load.d/containerd.conf
      state: absent
      mode: '0755'
      
  - name: Add the kubernetes networking file
    lineinfile:
      dest: /etc/modules-load.d/containerd.conf
      regexp: '.*{{ item }}$'
      line: "{{ item }}"
      state: absent
    loop:
      - overlay
      - br_netfilter

  - name: Apply Overlay
    shell: sudo modprobe overlay

  - name: Apply br_netfilter
    shell: sudo modprobe br_netfilter


  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /etc/sysctl.d/kubernetes.conf
      state: absent
      mode: '0755'
      
  - name: Add the kubernetes networking file
    lineinfile:
      dest: /etc/sysctl.d/kubernetes.conf
      regexp: '.*{{ item }}$'
      line: "{{ item }}"
      state: absent
    loop:
      - net.bridge.bridge-nf-call-ip6tables = 1
      - net.bridge.bridge-nf-call-iptables = 1
      - net.ipv4.ip_forward = 1
  
  - name: Reload changes
    shell: sudo sysctl --system

  - name: Update the apt packages
    ansible.builtin.apt:
      name:
        - apt-transport-https
        - curl
        - python3-pip
        - gnupg2
        - software-properties-common
        - ca-certificates
      state: latest

  - name: Add an Apt signing key
    ansible.builtin.apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: docker repo
    shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

  - name: Add source repository into sources list
    ansible.builtin.apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
      state: present

  - name: Upgrade all packages on servers
    apt: upgrade=dist force_apt_get=yes

  - name: Install Containerd.io
    ansible.builtin.apt:
      name: "containerd.io"
      state: latest

  - name: Configure the containerd toml
    shell: containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1

  - name: Configure group
    shell: sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

  - name: Restart service
    ansible.builtin.systemd:
      state: restarted
      daemon_reload: yes
      name: containerd

  - name: Enable service containerd and ensure it is not masked
    ansible.builtin.systemd:
      name: containerd
      enabled: yes
      masked: no

  - name: Update the apt packages
    ansible.builtin.apt:
      name: "*"
      state: latest

  - name: Update the apt packages
    ansible.builtin.apt:
      name:
        - kubeadm
        - kubelet
        - kubectl
      state: latest

  - name: Hold kubeadm
    shell: sudo apt-mark hold kubelet kubeadm kubectl